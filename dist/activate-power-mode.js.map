{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7c7a13497d18a3555094","webpack:///./src/index.js","webpack:///./lib/textarea-caret-position.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,wCAAuC,MAAM,OAAO,oBAAoB;AACxE;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAA8E,aAAa;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/IA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mGAAkG;;AAElG;AACA;AACA;AACA,2CAA0C;;AAE1C;AACA,qCAAoC;AACpC;AACA,yCAAwC;;AAExC;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;AACT,uCAAsC,0CAA0C;AAChF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE;AACpE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA,EAAC,I","file":"activate-power-mode.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"POWERMODE\"] = factory();\n\telse\n\t\troot[\"POWERMODE\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7c7a13497d18a3555094","'use strict';\n\nvar canvas = document.createElement('canvas');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\ncanvas.style.cssText = 'position:fixed;top:0;left:0;pointer-events:none;z-index:999999';\nwindow.addEventListener('resize', function () {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n});\ndocument.body.appendChild(canvas);\nvar context = canvas.getContext('2d');\n//彩弹的数组\nlet particles = [];\nvar particlePointer = 0;\nvar rendering = false;\n\nPOWERMODE.shake = true;\n\nfunction getRandom(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\nfunction getColor(el) {\n    if (POWERMODE.colorful) {\n        var u = getRandom(0, 360);\n        return 'hsla(' + getRandom(u - 10, u + 10) + ', 100%, ' + getRandom(50, 80) + '%, ' + 1 + ')';\n    } else {\n        return window.getComputedStyle(el).color;\n    }\n}\n\n//取得光标\nfunction getCaret() {\n    //取得当前激活的元素\n    //TODO document.activeElement\n    let el = document.activeElement;\n    //TODO bcr is what?\n    let bcr = null;\n    //如果是Textarea元素或者是text类型的input元素时\n    if (el.tagName === 'TEXTAREA' ||\n        (el.tagName === 'INPUT' && el.getAttribute('type') === 'text')) {\n        var offset = require('textarea-caret-position')(el, el.selectionEnd, {debug: false});\n        bcr = el.getBoundingClientRect();\n        return {\n            x: offset.left + bcr.left,\n            y: offset.top + bcr.top,\n            color: getColor(el)\n        };\n    }\n    var selection = window.getSelection();\n    if (selection.rangeCount) {\n        var range = selection.getRangeAt(0);\n        var startNode = range.startContainer;\n        if (startNode.nodeType === document.TEXT_NODE) {\n            startNode = startNode.parentNode;\n        }\n        bcr = range.getBoundingClientRect();\n        return {\n            x: bcr.left,\n            y: bcr.top,\n            color: getColor(startNode)\n        };\n    }\n    return {x: 0, y: 0, color: 'transparent'};\n}\n\n//创建彩弹\nfunction createParticle(x, y, color) {\n    return {\n        x: x,\n        y: y,\n        alpha: 1,\n        color: color,\n        velocity: {//速度\n            x: -1 + Math.random() * 2,//-1,1\n            y: -3.5 + Math.random() * 2//-3.5,-1.5\n        }\n    };\n}\n\nPOWERMODE.colorful = false;\n\nfunction loop() {\n    rendering = true;\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    var rendered = false;\n    var rect = canvas.getBoundingClientRect();\n    for (var i = 0; i < particles.length; ++i) {\n        var particle = particles[i];\n        if (particle.alpha <= 0.1) continue;\n        particle.velocity.y += 0.075;\n        particle.x += particle.velocity.x;\n        particle.y += particle.velocity.y;\n        particle.alpha *= 0.96;\n        context.globalAlpha = particle.alpha;\n        context.fillStyle = particle.color;\n        context.fillRect(\n            Math.round(particle.x - 1.5) - rect.left,\n            Math.round(particle.y - 1.5) - rect.top,\n            3, 3\n        );\n        rendered = true;\n    }\n    if (rendered) {\n        requestAnimationFrame(loop);\n    } else {\n        rendering = false;\n    }\n}\n\n//主程序入口\nfunction POWERMODE() {\n    { // spawn particles\n        //取得光标的位置\n        let caret = getCaret();\n        //设置彩弹的数量 0到15个\n        let numParticles = 5 + Math.round(Math.random() * 10);\n        console.log(numParticles);\n        //设置每个彩弹\n        while (numParticles--) {\n            particles[particlePointer] = createParticle(caret.x, caret.y, caret.color);\n            //这里应该是设置彩弹上限的,最多500个\n            particlePointer = (particlePointer + 1) % 500;\n        }\n    }\n    { // shake screen\n        if (POWERMODE.shake) {\n            var intensity = 1 + 2 * Math.random();\n            var x = intensity * (Math.random() > 0.5 ? -1 : 1);\n            var y = intensity * (Math.random() > 0.5 ? -1 : 1);\n            document.body.style.marginLeft = x + 'px';\n            document.body.style.marginTop = y + 'px';\n            setTimeout(function () {\n                document.body.style.marginLeft = '';\n                document.body.style.marginTop = '';\n            }, 75);\n        }\n    }\n    if (!rendering) {\n        requestAnimationFrame(loop);\n    }\n};\nmodule.exports = POWERMODE;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","/* jshint browser: true */\n\n(function () {\n\n// The properties that we copy into a mirrored div.\n// Note that some browsers, such as Firefox,\n// do not concatenate properties, i.e. padding-top, bottom etc. -> padding,\n// so we have to do every single property specifically.\n    let properties = [\n        'direction',  // RTL support\n        'boxSizing',\n        'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n        'height',\n        'overflowX',\n        'overflowY',  // copy the scrollbar for IE\n\n        'borderTopWidth',\n        'borderRightWidth',\n        'borderBottomWidth',\n        'borderLeftWidth',\n        'borderStyle',\n\n        'paddingTop',\n        'paddingRight',\n        'paddingBottom',\n        'paddingLeft',\n\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n        'fontStyle',\n        'fontVariant',\n        'fontWeight',\n        'fontStretch',\n        'fontSize',\n        'fontSizeAdjust',\n        'lineHeight',\n        'fontFamily',\n\n        'textAlign',\n        'textTransform',\n        'textIndent',\n        'textDecoration',  // might not make a difference, but better be safe\n\n        'letterSpacing',\n        'wordSpacing',\n\n        'tabSize',\n        'MozTabSize'\n\n    ];\n    //判断是否为firefox\n    let isFirefox = window.mozInnerScreenX != null;\n\n    //取得光标的坐标\n    function getCaretCoordinates(element, position, options) {\n        //这样写是为了防止options为空\n        //TODO 访问属性时防止为空的写法\n        //如果options为空,括号内会直接返回false,不会检查options.debug是否存在\n        // let debug = (options && options.debug) || false;\n        //最后面的||false 应该是不需要的吧.前面返回的肯定是布尔值,如果是true则为true\n        //false则为false,后面的||false不起作用\n        let debug = (options && options.debug);\n        //如果传入参数里面debug为true\n        //TODO 这里的debug模式是起什么作用?\n        if (debug) {\n            //TODO document.querySelector使用\n            let el = document.querySelector('#input-textarea-caret-position-mirror-div');\n            if (el) {\n                el.parentNode.removeChild(el);\n            }\n        }\n\n        // mirrored div\n        let div = document.createElement('div');\n        div.id = 'input-textarea-caret-position-mirror-div';\n        document.body.appendChild(div);\n\n        let style = div.style;\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n\n        // default textarea styles\n        style.whiteSpace = 'pre-wrap';\n        if (element.nodeName !== 'INPUT')\n            style.wordWrap = 'break-word';  // only for textarea-s\n\n        // position off-screen\n        style.position = 'absolute';  // required to return coordinates properly\n        if (!debug)\n            style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n        // transfer the element's properties to the div\n        properties.forEach(function (prop) {\n            style[prop] = computed[prop];\n        });\n\n        if (isFirefox) {\n            // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n            if (element.scrollHeight > parseInt(computed.height))\n                style.overflowY = 'scroll';\n        } else {\n            style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n        }\n\n        div.textContent = element.value.substring(0, position);\n        // the second special handling for input type=\"text\" vs textarea: spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n        if (element.nodeName === 'INPUT')\n            div.textContent = div.textContent.replace(/\\s/g, \"\\u00a0\");\n\n        var span = document.createElement('span');\n        // Wrapping must be replicated *exactly*, including when a long word gets\n        // onto the next line, with whitespace at the end of the line before (#7).\n        // The  *only* reliable way to do that is to copy the *entire* rest of the\n        // textarea's content into the <span> created at the caret position.\n        // for inputs, just '.' would be enough, but why bother?\n        span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n        div.appendChild(span);\n\n        var coordinates = {\n            top: span.offsetTop + parseInt(computed['borderTopWidth']),\n            left: span.offsetLeft + parseInt(computed['borderLeftWidth'])\n        };\n\n        if (debug) {\n            span.style.backgroundColor = '#aaa';\n        } else {\n            document.body.removeChild(div);\n        }\n\n        return coordinates;\n    }\n\n    if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n        module.exports = getCaretCoordinates;\n    } else {\n        window.getCaretCoordinates = getCaretCoordinates;\n    }\n\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/textarea-caret-position.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}